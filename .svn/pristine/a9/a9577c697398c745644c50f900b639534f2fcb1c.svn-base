package kr.or.ddit.nn.view.myInfo;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.URL;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.ResourceBundle;

import com.jfoenix.controls.JFXButton;
import com.jfoenix.controls.JFXTextField;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.control.Alert;
import javafx.scene.control.Label;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.Pane;
import javafx.stage.FileChooser;
import javafx.stage.FileChooser.ExtensionFilter;
import kr.or.ddit.nn.main.ClientMain;
import kr.or.ddit.nn.main.Logout_mainController;
import kr.or.ddit.nn.main.Session;
import kr.or.ddit.nn.service.member.MyInfoService;
import kr.or.ddit.nn.vo.member.MemberVO;
import util.Server;

public class MyInfo_updateController implements Initializable {

	@FXML
	private Pane mainPane;

	@FXML
	private JFXButton buyhistory_btn;

	@FXML
	private JFXButton myinfo_btn;

	@FXML
	private JFXButton mylevel_btn;

	@FXML
	private JFXButton playlist_btn;

	@FXML
	private JFXButton musichistory_btn;

	@FXML
	private JFXButton like_btn;

	@FXML
	private Label memId;

	@FXML
	private Label img_update_btn;

	@FXML
	private JFXTextField memName;

	@FXML
	private JFXTextField memNick;

	@FXML
	private JFXTextField memPass1;

	@FXML
	private JFXTextField memPass2;

	@FXML
	private JFXTextField memEmail;

	@FXML
	private JFXTextField memPhone;

	@FXML
	private ImageView imgBox;

	private MemberVO my = Session.getUser();

	public void updateImg() {

		String saveName = "profile-" + Session.getUser().getMem_id() + ".jpg";
		String savePath = "img";

		FileOutputStream fout = null;

		System.out.println(savePath + "\\" + saveName);

		try {
			int c;
			fout = new FileOutputStream(savePath + "\\" + saveName);
			BufferedOutputStream fos = new BufferedOutputStream(fout, 4);
			FileInputStream fin = new FileInputStream(newImgPath);
			BufferedInputStream bis = new BufferedInputStream(fin, 4);
			while ((c = bis.read()) != -1) {
				fos.write(c);
			}
			bis.close();
			fos.close();
			fout.close();
			fin.close();

		} catch (IOException e) {
			e.printStackTrace();
		}

		setImage();
		setTopBar();
	}

	private String newImgPath;

	@FXML
	private void loadImg() {
		FileChooser fileChooser = new FileChooser();

		fileChooser.getExtensionFilters().addAll(new ExtensionFilter("Image files", "*.jpg"));
		File selectFile = fileChooser.showOpenDialog(ClientMain.pStage);
		if (selectFile != null) {
			System.out.println("OPEN:" + selectFile.getPath());

			newImgPath = selectFile.getPath();
			imgBox.setImage(new Image(selectFile.toURI().toString()));
		} 

	}

	private void setTopBar() {
		BorderPane bp = (BorderPane) ClientMain.pStage.getScene().getRoot();
		try {
			Logout_mainController logoutController;
			FXMLLoader loader = new FXMLLoader(getClass().getResource("/kr/or/ddit/nn/main/Logout_main.fxml"));
			Parent pr = loader.load();
			logoutController = loader.getController();
			logoutController.getSession_name().setText((Session.getUser().getMem_name()));
			bp.setTop(pr);

		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private MyInfoService myInfo;

	@FXML
	void updateInfo(MouseEvent event) {

		if (memPass1.getText().equals(memPass2.getText())) {
			my.setMem_id(Session.getUser().getMem_id());
			my.setMem_name(memName.getText());
			my.setMem_pass(memPass1.getText());
			my.setMem_nick(memNick.getText());
			my.setMem_email(memEmail.getText());
			my.setMem_tel(memPhone.getText());

			try {
				myInfo.updateMyInfo(my);
				if(newImgPath != null) { updateImg(); }
				changeScene();

			} catch (RemoteException e) {
				e.printStackTrace();
			}

		} else {
			errMsg("비밀번호 오류", "비밀번호 확인칸의 내용을 다르게 입력하셨습니다.");
		}
	}

	@FXML
	void goBack(MouseEvent event) {
		changeScene();
	}

	public void changeScene() {
		Parent upParent = null;
		try {
			upParent = FXMLLoader.load(getClass().getResource("MyInfo_Main.fxml"));
		} catch (IOException e1) {
			e1.printStackTrace();
		}
		mainPane.getChildren().setAll(upParent);
	}

	public void errMsg(String headerText, String msg) {
		Alert errAlert = new Alert(AlertType.ERROR);
		errAlert.setTitle("오류");
		errAlert.setHeaderText(headerText);
		errAlert.setContentText(msg);
		errAlert.showAndWait();
	}

	private void setImage() {

		File file = new File("img/profile-" + Session.getUser().getMem_id() + ".jpg");
		Image img;
		if (file.exists()) {
			img = new Image(file.toURI().toString());
		} else {
			img = new Image(new File("img/profile.jpg").toURI().toString());
		}
		imgBox.setImage(img);
	}

	private void setText() {

		memId.setText(my.getMem_id());
		memName.setText(my.getMem_name());
		memNick.setText(my.getMem_nick());
		memPass1.setText(my.getMem_pass());
		memPass2.setText(my.getMem_pass());
		memPhone.setText(my.getMem_tel());
		memEmail.setText(my.getMem_email());
	}

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		
		MenuConnector menuCon = new MenuConnector();
		menuCon.setPane(mainPane);
		menuCon.setBtn(myinfo_btn, mylevel_btn, buyhistory_btn, musichistory_btn, like_btn, playlist_btn);

		try {
			myInfo = (MyInfoService) Server.reg.lookup("myInfo");
		} catch (AccessException e1) {
			e1.printStackTrace();
		} catch (RemoteException e1) {
			e1.printStackTrace();
		} catch (NotBoundException e1) {
			e1.printStackTrace();
		}
		try {
			myInfo.updateMyInfo(my);
		} catch (RemoteException e2) {
			e2.printStackTrace();
		}

		setText();
		setImage();

	}

}
